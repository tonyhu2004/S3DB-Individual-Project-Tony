name: ASP.NET Core CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # disable shallow clones
          
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
          
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      working-directory: S3DB-Individual-Project-Tony
      run: dotnet restore 

    - name: Build project
      run: dotnet build 

    - name: Run xUnit tests
      run: dotnet test --no-build --verbosity normal 

    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~\.sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
        
    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        mkdir -p ./.sonar/scanner
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: Install DotCover
      run: |
        dotnet tool install --global JetBrains.dotCover.GlobalTool

    - name: Build
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"ShopHop" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        dotnet build

    - name: Test Coverage
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"ShopHop" 
        /d:sonar.token="${{ secrets.SONAR_TOKEN }}" 
        /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html
        dotnet build --no-incremental
        dotnet dotcover test --dcReportType=HTML
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
